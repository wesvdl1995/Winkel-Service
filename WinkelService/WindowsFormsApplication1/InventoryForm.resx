<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAAAIABoBAAAJgAAACAgAAAAACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAEAE
        AAAAAAAAAAAAAAAAAAAAAAAAQ2CULUJfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jf
        k/9CX5P/Ql+T/0Jfk/9CX5P/Q2CULUNglC1CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jf
        k/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0NglC1DYJQtQl+T/0Jfk/9CX5P/qr7Q/7vO2/+7ztv/u87b/7vO
        2/+7ztv/u87b/6q+0P9CX5P/Ql+T/0Jfk/9DYJQtQ2CULUJfk/9CX5P/Ql+T/8XW4P/R4+f/wdfb/9Lk
        5//R4+f/1ebp/9Hj5//F1uD/Ql+T/0Jfk/9CX5P/Q2CULUNglC1CX5P/Ql+T/0Jfk//F1uD/0ePn/9np
        7P/D2dz/wdjc/8HY3P/R5Of/xdbg/0Jfk/9CX5P/Ql+T/0NglC1DYJQtQl+T/0Jfk/9CX5P/hZy7/5Cm
        wf+QpsH/kKbB/5Cmwf+QpsH/kKbB/4Wcu/9CX5P/Ql+T/0Jfk/9DYJQtQ2CULUJfk/9CX5P/Ql+T/0Jf
        k/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Q2CULUNglC1CX5P/Ql+T/0Jf
        k/9BXpL/M059/zNOff8zTn3/M059/zNOff8zTn3/QV6S/0Jfk/9CX5P/Ql+T/0NglC1DYJQtQl+T/0Jf
        k/9CX5P/QV6S/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/0Fekv9CX5P/Ql+T/0Jfk/9DYJQtQ2CULUJf
        k/9CX5P/Ql+T/0Fekv8wS3n/MEt5/zBLef8wS3n/MEt5/zBLef9BXpL/Ql+T/0Jfk/9CX5P/Q2CULUNg
        lC1CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Ng
        lC1RaZi5TGeW4UxnluFMZ5bhTGeW4UxnluFMZ5bhTGeW4UxnluFMZ5bhTGeW4UxnluFMZ5bhTGeW4Uxn
        luFRaZi5UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jr
        mf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jr
        mf9Sa5n/UmuZ/1Jrmf8oQW2TJ0Fs8SdBbPEnQWzxJ0Fs8SdBbPEnQWzxJ0Fs8SdBbPEnQWzxJ0Fs8SdB
        bPEnQWzxJ0Fs8SdBbPEoQW2TI0ZoBydBa78nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydB
        bP8nQWz/J0Fs/ydBbP8nQWu/I0ZoBwAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//wAA//8AAP//AAD//wAA//8oAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAA////AUNglFlCX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jf
        k/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jf
        k/9CX5P/Q2CUWf///wH///8BQ2CUWUJfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jf
        k/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jf
        k/9CX5P/Ql+T/0Jfk/9DYJRZ////Af///wFDYJRZQl+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jf
        k/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jf
        k/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0NglFn///8B////AUNglFlCX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jf
        k/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jf
        k/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Q2CUWf///wH///8BQ2CUWUJfk/9CX5P/Ql+T/0Jf
        k/9CX5P/Ql+T/4Oauf+dssn/nbLJ/52yyf+dssn/nbLJ/52yyf+dssn/nbLJ/52yyf+dssn/nbLJ/52y
        yf+dssn/nbLJ/4Oauf9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9DYJRZ////Af///wFDYJRZQl+T/0Jf
        k/9CX5P/Ql+T/0Jfk/9CX5P/sMPU/9rq7f/a6u3/2urt/9rq7f/a6u3/2urt/9rq7f/a6u3/2urt/9rq
        7f/a6u3/2urt/9rq7f/a6u3/sMPU/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0NglFn///8B////AUNg
        lFlCX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/+ww9T/2urt/9rq7f+809j/scvQ/7HL0P+/1dr/2urt/83g
        5P/E2t7/2urt/8jc4P+809j/2urt/9rq7f+ww9T/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Q2CUWf//
        /wH///8BQ2CUWUJfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/7DD1P/a6u3/2urt/9bn6v/S5Of/0uTn/9bn
        6v/a6u3/2urt/9rq7f/a6u3/2Ons/9bn6v/a6u3/2urt/7DD1P9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jf
        k/9DYJRZ////Af///wFDYJRZQl+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/sMPU/9rq7f/a6u3/wdfb/9jp
        7P/Y6ez/vdTY/7rS1/+60tf/utLX/7rS1/+60tf/w9nd/9rq7f/a6u3/sMPU/0Jfk/9CX5P/Ql+T/0Jf
        k/9CX5P/Ql+T/0NglFn///8B////AUNglFlCX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/+ww9T/2urt/9rq
        7f/S5Of/2urt/9rq7f/M4OP/yd7h/8ne4f/J3uH/yd7h/8ne4f/Q4+b/2urt/9rq7f+ww9T/Ql+T/0Jf
        k/9CX5P/Ql+T/0Jfk/9CX5P/Q2CUWf///wH///8BQ2CUWUJfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/7DD
        1P/a6u3/2urt/9rq7f/a6u3/2urt/9rq7f/a6u3/2urt/9rq7f/a6u3/2urt/9rq7f/a6u3/2urt/7DD
        1P9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9DYJRZ////Af///wFDYJRZQl+T/0Jfk/9CX5P/Ql+T/0Jf
        k/9CX5P/RWKV/0djlv9HY5b/R2OW/0djlv9HY5b/R2OW/0djlv9HY5b/R2OW/0djlv9HY5b/R2OW/0dj
        lv9HY5b/RWKV/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0NglFn///8B////AUNglFlCX5P/Ql+T/0Jf
        k/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jf
        k/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Q2CUWf///wH///8BQ2CUWUJf
        k/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jf
        k/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9DYJRZ////Af//
        /wFDYJRZQl+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/8/XI//P1yP/z9cj/8/XI//P1yP/z9c
        j/8/XI//P1yP/z9cj/8/XI//P1yP/z9cj/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Ng
        lFn///8B////AUNglFlCX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/QF2R/ydBbP8nQWz/J0Fs/ydB
        bP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/0Bdkf9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jf
        k/9CX5P/Q2CUWf///wH///8BQ2CUWUJfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9AXZH/J0Fs/ydB
        bP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/QF2R/0Jfk/9CX5P/Ql+T/0Jf
        k/9CX5P/Ql+T/0Jfk/9DYJRZ////Af///wFDYJRZQl+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Bd
        kf8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydBbP9AXZH/Ql+T/0Jf
        k/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0NglFn///8B////AUNglFlCX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jf
        k/9CX5P/QF2R/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/0Bd
        kf9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Q2CUWf///wH///8BQ2CUWUJfk/9CX5P/Ql+T/0Jf
        k/9CX5P/Ql+T/0Jfk/9BXpL/OlaH/zpWh/86Vof/OlaH/zpWh/86Vof/OlaH/zpWh/86Vof/OlaH/zpW
        h/86Vof/QV6S/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9DYJRZ////Af///wFDYJRZQl+T/0Jf
        k/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jf
        k/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0NglFn///8B////AUNg
        lFlCX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jf
        k/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Ql+T/0Jfk/9CX5P/Q2CUWf//
        /wFSapphTWaXg0VilMVFYpTFRWKUxUVilMVFYpTFRWKUxUVilMVFYpTFRWKUxUVilMVFYpTFRWKUxUVi
        lMVFYpTFRWKUxUVilMVFYpTFRWKUxUVilMVFYpTFRWKUxUVilMVFYpTFRWKUxUVilMVFYpTFRWKUxUVi
        lMVNZpeDUmqaYVJrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jr
        mf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jr
        mf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jr
        mf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jr
        mf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jr
        mf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jr
        mf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jr
        mf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jr
        mf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jr
        mf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jr
        mf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf9Sa5n/UmuZ/1Jrmf8rRHCXJ0Ft4ydB
        beMnQW3jJ0Ft4ydBbeMnQW3jJ0Ft4ydBbeMnQW3jJ0Ft4ydBbeMnQW3jJ0Ft4ydBbeMnQW3jJ0Ft4ydB
        beMnQW3jJ0Ft4ydBbeMnQW3jJ0Ft4ydBbeMnQW3jJ0Ft4ydBbeMnQW3jJ0Ft4ydBbeMnQW3jK0RwlyBA
        YAkoQWzJJ0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydB
        bP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/yhB
        bMkgQGAJ////ASNGaBcnQWzhJ0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydB
        bP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydB
        bP8nQWzhI0ZoF////wH///8B////ASpBaysnQWzxJ0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydB
        bP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydBbP8nQWz/J0Fs/ydB
        bP8nQWz/J0Fs8SpBayv///8B////AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>